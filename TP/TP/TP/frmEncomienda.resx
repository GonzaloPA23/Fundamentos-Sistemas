<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>